config BR2_PACKAGE_MICROMAMBA_ARCH_SUPPORTS
	bool
	# See libmamba/include/mamba/core/context.hpp
	default y if BR2_arm && (BR2_ARM_CPU_ARMV6 || BR2_ARM_CPU_ARMV7A)
	default y if BR2_aarch64
	default y if BR2_i386
	default y if BR2_powerpc64
	default y if BR2_powerpc64le
	default y if BR2_s390x
	default y if BR2_x86_64
	depends on BR2_USE_MMU # fork()

config BR2_PACKAGE_MICROMAMBA
	bool "micromamba"
	depends on BR2_PACKAGE_MICROMAMBA_ARCH_SUPPORTS
	depends on BR2_USE_WCHAR # fmt, reproc
	depends on BR2_INSTALL_LIBSTDCPP
	depends on BR2_TOOLCHAIN_HAS_THREADS # pthread
	depends on BR2_TOOLCHAIN_GCC_AT_LEAST_8 # C++17 filesystem
	select BR2_PACKAGE_LIBARCHIVE
	select BR2_PACKAGE_OPENSSL
	select BR2_PACKAGE_JSON_FOR_MODERN_CPP
	select BR2_PACKAGE_YAML_CPP
	select BR2_PACKAGE_SPDLOG
	select BR2_PACKAGE_LIBCURL
	select BR2_PACKAGE_LIBSOLV
	select BR2_PACKAGE_REPROC
	select BR2_PACKAGE_TL_EXPECTED
	select BR2_PACKAGE_CLI11
	select BR2_PACKAGE_FMT
	select BR2_PACKAGE_TERMCOLOR
	help
	  micromamba is a small, pure-C++ reimplementation of
	  mamba/conda. It strives to be a full replacement for mamba and
	  conda.

	  https://github.com/mamba-org/mamba

comment "micromamba needs a toolchain w/ wchar, threads, C++, gcc >= 8"
	depends on BR2_PACKAGE_MICROMAMBA_ARCH_SUPPORTS
	depends on !BR2_USE_WCHAR || !BR2_INSTALL_LIBSTDCPP || \
		!BR2_TOOLCHAIN_HAS_THREADS || \
		!BR2_TOOLCHAIN_GCC_AT_LEAST_8
